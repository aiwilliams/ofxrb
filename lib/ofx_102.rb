#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "ofx_102.y".
#

require 'racc/parser'


require 'strscan'


module OFXRB

  class Parser102 < Racc::Parser

module_eval <<'..end ofx_102.y modeval..iddc2bd249fa', 'ofx_102.y', 35
def name_from_ofx(tag)
  $1 if tag =~ /<\/?(\w+)>/
end

def end_tag_event(tag)
  tag_event(tag, 'end')
end

def start_tag_event(tag)
  tag_event(tag, 'start')
end

def tag_event(tag, type)
  method = "#{name_from_ofx(tag).downcase}_#{type}_event".to_sym
  @event_handler.send(method) if @event_handler.respond_to?(method)
end

def self.parse(ofx_doc, root_object = OfxHandler.new)
  new.parse(ofx_doc, root_object)
end

def parse(ofx_doc, event_handler)
  @event_handler = event_handler

  @match_tokens = {
    :START_TAG => /<\w+>/,
    :END_TAG => /<\/\w+>/,
    :STRING => /[^\r\n<>:]+/,
    :COLON => /:/,
  }

  @tokens, s = [], StringScanner.new(ofx_doc)
  until s.eos?
    s.scan(/\s*/)
    @match_tokens.each do |key, value|
      if s.scan(value)
        @tokens << [key, s.matched]
        # Redefine string after headers so that : is allowed in values
        @match_tokens[:STRING] = /[^\r\n<>]+/ if key == :START_TAG        
        break # to consume more whitespace, move forward
      end
    end
  end

  #@yydebug = true
  do_parse
  @event_handler.ofx_object
end

private
def next_token
  @tokens.shift
end
..end ofx_102.y modeval..iddc2bd249fa

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 2, 7, :_reduce_none,
 2, 8, :_reduce_none,
 1, 8, :_reduce_none,
 3, 10, :_reduce_4,
 2, 9, :_reduce_none,
 1, 9, :_reduce_none,
 1, 9, :_reduce_none,
 3, 11, :_reduce_none,
 2, 11, :_reduce_none,
 2, 12, :_reduce_none,
 2, 12, :_reduce_none,
 1, 12, :_reduce_none,
 2, 15, :_reduce_13,
 2, 16, :_reduce_none,
 1, 16, :_reduce_none,
 1, 13, :_reduce_16,
 1, 14, :_reduce_17 ]

racc_reduce_n = 18

racc_shift_n = 24

racc_action_table = [
    17,    15,    10,    19,     1,     1,    10,    14,     6,    10,
     5,    10,    19 ]

racc_action_check = [
     9,     6,     9,     9,     3,     0,     3,     5,     2,     7,
     1,    11,    20 ]

racc_action_pointer = [
     3,     7,     8,     2,   nil,     5,     1,     5,   nil,    -2,
   nil,     7,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     7,   nil,   nil,   nil ]

racc_action_default = [
   -18,   -18,   -18,   -18,    -3,   -18,   -18,    -7,    -6,   -18,
   -16,   -12,    -1,    -2,    -4,    24,    -5,   -13,    -9,   -17,
   -18,    -6,   -11,    -8 ]

racc_goto_table = [
    18,    12,     3,     4,    21,    16,    13,    20,     2,    22,
   nil,    23 ]

racc_goto_check = [
     8,     3,     2,     4,     6,     3,     4,     3,     1,     3,
   nil,     8 ]

racc_goto_pointer = [
   nil,     8,     2,    -2,     3,   nil,    -7,   nil,    -9,   nil,
   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,     7,     8,     9,   nil,    11,
   nil ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :STRING => 2,
 :COLON => 3,
 :START_TAG => 4,
 :END_TAG => 5 }

racc_use_result_var = true

racc_nt_base = 6

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'STRING',
'COLON',
'START_TAG',
'END_TAG',
'$start',
'root',
'headers',
'objects',
'key_value_pair',
'object',
'properties',
'start_tag',
'end_tag',
'property',
'end_tags']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

 # reduce 1 omitted

 # reduce 2 omitted

 # reduce 3 omitted

module_eval <<'.,.,', 'ofx_102.y', 7
  def _reduce_4( val, _values, result )
@event_handler.header_event(val[0], val[2])
   result
  end
.,.,

 # reduce 5 omitted

 # reduce 6 omitted

 # reduce 7 omitted

 # reduce 8 omitted

 # reduce 9 omitted

 # reduce 10 omitted

 # reduce 11 omitted

 # reduce 12 omitted

module_eval <<'.,.,', 'ofx_102.y', 20
  def _reduce_13( val, _values, result )
@event_handler.property_event(name_from_ofx(val[0]), val[1])
   result
  end
.,.,

 # reduce 14 omitted

 # reduce 15 omitted

module_eval <<'.,.,', 'ofx_102.y', 25
  def _reduce_16( val, _values, result )
start_tag_event(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'ofx_102.y', 27
  def _reduce_17( val, _values, result )
end_tag_event(val[0])
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

  end   # class Parser102

end   # module OFXRB
